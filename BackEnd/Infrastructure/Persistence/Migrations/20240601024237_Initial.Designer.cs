// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Posterr.Infrastructure.Persistence;

#nullable disable

namespace Posterr.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240601024237_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Posterr.Infrastructure.Persistence.DbEntities.PublicationDbEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("AuthorId")
                        .HasColumnType("bigint");

                    b.Property<string>("AuthorUsername")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("OriginalPostAuthorId")
                        .HasColumnType("bigint");

                    b.Property<string>("OriginalPostAuthorUsername")
                        .HasColumnType("text");

                    b.Property<string>("OriginalPostContent")
                        .HasColumnType("text");

                    b.Property<long?>("OriginalPostId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("OriginalPostPublicationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("PublicationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("OriginalPostId");

                    b.ToTable("Publications");
                });

            modelBuilder.Entity("Posterr.Infrastructure.Persistence.DbEntities.UserDbEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Username = "simba"
                        },
                        new
                        {
                            Id = 2L,
                            Username = "nala"
                        },
                        new
                        {
                            Id = 3L,
                            Username = "timon"
                        },
                        new
                        {
                            Id = 4L,
                            Username = "pumbaa"
                        });
                });

            modelBuilder.Entity("Posterr.Infrastructure.Persistence.DbEntities.PublicationDbEntity", b =>
                {
                    b.HasOne("Posterr.Infrastructure.Persistence.DbEntities.UserDbEntity", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Posterr.Infrastructure.Persistence.DbEntities.PublicationDbEntity", "OriginalPost")
                        .WithMany()
                        .HasForeignKey("OriginalPostId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Author");

                    b.Navigation("OriginalPost");
                });
#pragma warning restore 612, 618
        }
    }
}
